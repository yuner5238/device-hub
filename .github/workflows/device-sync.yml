name: Device Data Sync

on:
  # 触发条件：Webhook 接收自定义事件
  repository_dispatch:
    types: [update_devices]  # 自定义事件类型（与前端触发的一致）

jobs:
  sync-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Read devices.json
        id: read-file
        run: |
          # 读取本地 devices.json（初始为空，首次运行时需手动创建）
          if [ -f "devices.json" ]; then
            echo "devices=$(cat devices.json)" >> $GITHUB_OUTPUT
          else
            echo "devices=[]" >> $GITHUB_OUTPUT
          fi

      - name: Update devices.json（示例逻辑）
        run: |
          # 这里可以添加自定义逻辑（如验证数据、生成新内容）
          # 示例：将前端传递的 devices 数据写入文件
          echo '${{ github.event.client_payload.devices }}' > devices.json

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Update devices via webhook'
          file_pattern: 'devices.json'
